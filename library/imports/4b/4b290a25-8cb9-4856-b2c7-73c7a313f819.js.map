{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        backgroundAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        blackChessPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        whiteChessPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        movingChessName: \"\"\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.initChessToPoint();\n        // this.addNewChess();\n        \n    },\n\n    onTouchStart: function(e) {\n        cc.find('Canvas').emit('pick', this.name);\n        cc.find('Canvas').emit('put', this.name);\n        this.runAction(cc.scaleTo(0.1, 1.2, 1.2));\n        this.movingChessName = this.name;\n    },\n\n    onPick: function(e) {\n        if(e.detail !== this.name) {\n            this.runAction(cc.scaleTo(0.1,1, 1));\n        }\n    },\n\n    onPut: function(e) {\n        let x = 0, y = 0, that = this;\n        if(e.detail == this.name) {\n            cc.find('Canvas').on('touchstart', function(e) {\n                var locationV2 = this.convertToNodeSpaceAR(e.getLocation());\n                that.runAction(cc.moveTo(0.1,locationV2));\n            });\n        }\n    },\n\n    start: function() {\n        let chessMgr = require('chessMgr');\n        // this.chessMove();\n        // Set\n        // chessMgr.move(200, 100);\n    },\n    // 初始化放置棋子到默认位置\n    initChessToPoint: function() {\n        let that = this,\n            pointMgr = require('pointMgr'),\n            chessMgr = require('chessMgr');\n        for(let i=0;i<8; i++) {\n            let point = pointMgr.getPoint(i), \n                x = point.x, \n                y = point.y;\n            // chessMgr.move(x, y);\n            if(!point.isEmpty) {\n                if(point.color == 'white') {\n                    let newChess = cc.instantiate(this.whiteChessPrefab);\n                    that.node.addChild(newChess);\n                    newChess.setPosition(x, y);\n                    newChess.name = 'whiteChess'+i;\n                    cc.find('Canvas').on('pick', that.onPick, newChess),\n                    cc.find('Canvas').on('put', that.onPut, newChess),\n                    newChess.on('touchstart', that.onTouchStart, newChess);\n                } else {\n                    let newChess = cc.instantiate(this.blackChessPrefab);\n                    that.node.addChild(newChess);\n                    newChess.setPosition(x, y);\n                }\n            } \n        }\n    },\n    // 棋子移动\n    chessMove: function(el) {\n        let that = this,\n            isMoving = false;\n        el.on('touchstart', function() {\n            var scaleAction = cc.scaleBy(0.1,1.5, 1.5);\n            this.runAction(scaleAction);\n        }.bind(el));\n    },\n    addNewChess: function() {\n        let chessMgr = require('chessMgr'),\n            x = chessMgr.getPositionX(),\n            y = chessMgr.getPositionY(),\n            newChess = cc.instantiate(this.chessPrefab);\n        this.node.addChild(newChess);\n        console.log(x, y);\n        newChess.setPosition(x, y);\n    },\n\n    update: function() {\n\n    }\n});\n"
  ]
}